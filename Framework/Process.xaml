<Activity mc:Ignorable="sap sap2010" x:Class="Sequence_Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:SanityReport_ReadTemplate;assembly=SanityReport_ReadTemplate" xmlns:s1="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_str_URL" Type="InArgument(x:String)" />
    <x:Property Name="in_InputData" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="io_dt_TestSummaryReport" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="out_dtInputData" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1408.8,3189.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Sequence_Process_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Services.RuntimeAnalyze</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Core.Activities.TextModifications</x:String>
      <x:String>UiPath.Activities.System.Workflow.Business</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>SanityReport_ReadTemplate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.OmniPage.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>SanityReport_ReadTemplate</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Sequence_Process" sap:VirtualizedContainerService.HintSize="1452.0000000000002,2611.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_FirstName" />
      <Variable x:TypeArguments="x:String" Name="str_LastName" />
      <Variable x:TypeArguments="x:String" Name="str_Email" />
      <Variable x:TypeArguments="x:String" Name="str_Phone" />
      <Variable x:TypeArguments="x:String" Name="str_OfficeLocation" />
      <Variable x:TypeArguments="x:String" Name="str_ClientName" />
      <Variable x:TypeArguments="x:String" Name="str_Emailext" />
      <Variable x:TypeArguments="x:String" Name="str_TaxSoftware" />
      <Variable x:TypeArguments="x:String" Name="str_ProjectID" />
      <Variable x:TypeArguments="x:String" Name="str_ClientID" />
      <Variable x:TypeArguments="x:String" Name="str_TaxYear" />
      <Variable x:TypeArguments="x:String" Name="str_AddDoc" />
      <Variable x:TypeArguments="x:String" Name="str_newgetAmount" />
      <Variable x:TypeArguments="x:String" Name="str_getocrpdfamount" />
      <Variable x:TypeArguments="x:String" Name="str_getAmountnew" />
      <Variable x:TypeArguments="x:String" Name="str_State" />
      <Variable x:TypeArguments="x:String" Name="str_newgetHawaii" />
      <Variable x:TypeArguments="x:String" Name="str_AlabmaAmount" />
      <Variable x:TypeArguments="x:String" Name="str_PaymentMethod" />
      <Variable x:TypeArguments="x:String" Name="str_ColoradoAmount" />
      <Variable x:TypeArguments="x:String" Name="str_DelawareAmount" />
      <Variable x:TypeArguments="x:String" Name="str_GeorgiaAmount" />
      <Variable x:TypeArguments="x:String" Name="str_IdahoAmount" />
      <Variable x:TypeArguments="x:String" Name="str_IllinoisAmount" />
      <Variable x:TypeArguments="x:String" Name="str_IndianaAmount" />
      <Variable x:TypeArguments="x:String" Name="str_IowaAmount" />
      <Variable x:TypeArguments="x:String" Name="str_KentuckyAmount" />
      <Variable x:TypeArguments="x:String" Name="str_AmountDueLouisiana" />
      <Variable x:TypeArguments="x:String" Name="str_LouisianaAmount" />
      <Variable x:TypeArguments="x:String" Name="str_AmountDueNewMexico" />
      <Variable x:TypeArguments="x:String" Name="str_NewMexicoAmount" />
      <Variable x:TypeArguments="x:String" Name="str_OhioAmount" />
      <Variable x:TypeArguments="x:String" Name="str_NewAmountMassachusetts" />
      <Variable x:TypeArguments="x:String" Name="str_OklahomaAmount" />
      <Variable x:TypeArguments="x:String" Name="str_OregonAmount" />
      <Variable x:TypeArguments="x:String" Name="str_RhodeIslandAmount" />
      <Variable x:TypeArguments="x:String" Name="str_SouthCarolinaAmount" />
      <Variable x:TypeArguments="x:String" Name="str_UtahAmount" />
      <Variable x:TypeArguments="x:String" Name="str_WisconsinAmount" />
      <Variable x:TypeArguments="x:String" Name="str_WestVirginiaAmount" />
      <Variable x:TypeArguments="x:String" Name="str_MarylandAmount" />
      <Variable x:TypeArguments="x:String" Name="str_MissouriAmount" />
      <Variable x:TypeArguments="x:String" Name="str_AmountMississippi" />
      <Variable x:TypeArguments="x:String" Name="str_AccountNumber" />
      <Variable x:TypeArguments="x:String" Name="str_Process" />
      <Variable x:TypeArguments="x:String" Name="str_Functionality" />
      <Variable x:TypeArguments="x:String" Name="str_UltraTaxSoftwareAccountNumber" />
      <Variable x:TypeArguments="x:String" Name="str_UltraTaxSoftwareAliasforDataLocation" />
      <Variable x:TypeArguments="x:Int32" Name="int_countofefileauthorization" />
      <Variable x:TypeArguments="x:Boolean" Name="isFirstRun" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="417.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started Process&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <If Condition="[System.IO.File.Exists(in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;)]" DisplayName="Copy report blank template " sap:VirtualizedContainerService.HintSize="417.6,466.4" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,238.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="382.4,178.4" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[in_Config(&quot;SanityReport_TemplatePath&quot;).ToString]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="isFirstRun" CacheStrategy="None" DisplayName="Get Asset" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="417.6,175.2" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:Boolean">[isFirstRun]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <If Condition="[isFirstRun]" sap:VirtualizedContainerService.HintSize="417.6,56.8" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="483.2,1070.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="s1:DateTime" Name="dtStartTime" />
            <Variable x:TypeArguments="x:String" Name="dtTCStartTime" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <s:SanityReport_ReadTemplate in_strBinderID="{x:Null}" sap:VirtualizedContainerService.HintSize="449.6,382.4" sap2010:WorkflowViewState.IdRef="SanityReport_ReadTemplate_1" in_SanityTestFilesheetName="[in_Config(&quot;SanityReport_FilesheetName&quot;).ToString]" in_strSPClientID="[in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString]" in_strSanityTestOutputPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString]" in_strSanityTestTemplatePath="[in_Config(&quot;SanityReport_TemplatePath&quot;).ToString]" out_dtTestSummaryReport="[io_dt_TestSummaryReport]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </s:SanityReport_ReadTemplate>
          <Sequence sap:VirtualizedContainerService.HintSize="449.6,56.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[System.IO.File.Exists(in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;)]" sap:VirtualizedContainerService.HintSize="468.8,772" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,552.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="TestReportExcel" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadRange WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[out_dtInputData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ReadRange_1" Range="[in_Config(&quot;TestSummary_SummaryRange&quot;).ToString]" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" WorkbookPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" />
                  <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TestReportExcel]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Config("SanityReport_ReportPath").ToString.Split(".xlsx")(0)+"_"+In_TransactionItem.SpecificContent("FirstName").ToString+".xlsx"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell WorkbookPathResource="{x:Null}" Cell="[in_Config(&quot;TestSummary_TranscationId&quot;).ToString]" DisplayName="Transcation Id" sap:VirtualizedContainerService.HintSize="433.6,148" sap2010:WorkflowViewState.IdRef="WriteCell_3" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" Text="[in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString]" WorkbookPath="[TestReportExcel]" />
                  <ui:ReadRange WorkbookPathResource="{x:Null}" AddHeaders="True" DataTable="[out_dtInputData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="433.6,111.2" sap2010:WorkflowViewState.IdRef="ReadRange_2" Range="[in_Config(&quot;TestSummary_SummaryRange&quot;).ToString]" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" WorkbookPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <Assign DisplayName="Assign - Start Time" sap:VirtualizedContainerService.HintSize="449.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="s1:DateTime">[dtStartTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s1:DateTime">[DateTime.Now.ToLocalTime]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:WriteCell WorkbookPathResource="{x:Null}" Cell="[in_Config(&quot;TestSummary_StartTimeIndex&quot;).ToString]" DisplayName="Process Start Time" sap:VirtualizedContainerService.HintSize="449.6,148" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" Text="[dtStartTime.ToString]" WorkbookPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" />
          <Assign DisplayName="Assign - Start Time" sap:VirtualizedContainerService.HintSize="449.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[dtTCStartTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Now.ToString("hh:mm:ss")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:WriteCell WorkbookPathResource="{x:Null}" Cell="[in_Config(&quot;TestSummary_StartTimeTCIndex&quot;).ToString]" DisplayName="TC profile Start Time" sap:VirtualizedContainerService.HintSize="449.6,148" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" Text="[dtTCStartTime]" WorkbookPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" />
          <ui:SetAsset TimeoutMS="{x:Null}" AssetName="isFirstRun" DisplayName="Set Asset" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="449.6,48" sap2010:WorkflowViewState.IdRef="SetAsset_1" Value="[False]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:SetAsset>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="483.2,89.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="417.6,56.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="32">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_FirstName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("FirstName").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_LastName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("LastName").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_Email]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Email").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_Phone]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Phone").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_OfficeLocation]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("OfficeLocation").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_ClientName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("ClientName").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_Emailext]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Emailext").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_TaxSoftware]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("TaxSoftware").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_ClientID]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("ClientID").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_ProjectID]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("ProjectID").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_TaxYear]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("TaxYear").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_AddDoc]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("AddDoc").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_State]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Resident State").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_PaymentMethod]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("PaymentMethod").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_Process]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Process").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_Functionality]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Functionality").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_UltraTaxSoftwareAccountNumber]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("UltraTaxSoftwareAccountNumber").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_UltraTaxSoftwareAliasforDataLocation]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("UltraTaxSoftwareAliasforDataLocation").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[str_AccountNumber]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Account Number").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="417.6,833.6" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FetchedTypeAlongWithStateSelection - Invoke Workflow File (Functionality\FetchedTypeAlongWithStateSelection.xaml)" sap:VirtualizedContainerService.HintSize="416,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Functionality\FetchedTypeAlongWithStateSelection.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_FirstName">[str_FirstName]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_LastName">[str_LastName]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_Email">[str_Email]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_Phone">[str_Phone]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_OfficeLocation">[str_OfficeLocation]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_ClientName">[str_ClientName]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_Emailext">[str_Emailext]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_TaxSoftware">[str_TaxSoftware]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_ClientID">[str_ClientID]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_ProjectID">[str_ProjectID]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_TaxYear">[str_TaxYear]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_AddDoc">[str_AddDoc]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_State">[str_State]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_PaymentMethod">[str_PaymentMethod]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_Process">[str_Process]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_Functionality">[str_Functionality]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_UltraTaxSoftwareAccountNumber">[str_UltraTaxSoftwareAccountNumber]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_UltraTaxSoftwareAliasforDataLocation">[str_UltraTaxSoftwareAliasforDataLocation]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_AccountNumber">[str_AccountNumber]</InOutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="str_newgetAmount">[str_newgetAmount]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_str_URL">[in_str_URL]</InArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_getAmountnew">[str_getAmountnew]</InOutArgument>
            <OutArgument x:TypeArguments="x:Int32" x:Key="int_countofefileauthorization">[int_countofefileauthorization]</OutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_InputData">[in_InputData]</InArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_getocrpdfamount">[str_getocrpdfamount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_newgetHawaii">[str_newgetHawaii]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_AlabmaAmount">[str_AlabmaAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_ColoradoAmount">[str_ColoradoAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_DelawareAmount">[str_DelawareAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_GeorgiaAmount">[str_GeorgiaAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_IdahoAmount">[str_IdahoAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_IllinoisAmount">[str_IllinoisAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_IndianaAmount">[str_IndianaAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_IowaAmount">[str_IowaAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_KentuckyAmount">[str_KentuckyAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_AmountDueLouisiana">[str_AmountDueLouisiana]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_LouisianaAmount">[str_LouisianaAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_AmountDueNewMexico">[str_AmountDueNewMexico]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_NewMexicoAmount">[str_NewMexicoAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_OhioAmount">[str_OhioAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_OklahomaAmount">[str_OklahomaAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_NewAmountMassachusetts">[str_NewAmountMassachusetts]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_OregonAmount">[str_OregonAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_RhodeIslandAmount">[str_RhodeIslandAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_SouthCarolinaAmount">[str_SouthCarolinaAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_UtahAmount">[str_UtahAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_WisconsinAmount">[str_WisconsinAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_WestVirginiaAmount">[str_WestVirginiaAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_MarylandAmount">[str_MarylandAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_MissouriAmount">[str_MissouriAmount]</InOutArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="str_AmountMississippi">[str_AmountMississippi]</InOutArgument>
            <InArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_TestSummaryReport">[io_dt_TestSummaryReport]</InArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s1:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s1:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,404" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WriteCell WorkbookPathResource="{x:Null}" Cell="B18" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="382.4,148" sap2010:WorkflowViewState.IdRef="WriteCell_15" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" Text="Failed" WorkbookPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" />
              <ui:WriteCell WorkbookPathResource="{x:Null}" Cell="E18" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="382.4,148" sap2010:WorkflowViewState.IdRef="WriteCell_17" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" Text="[exception.Message]" WorkbookPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" />
              <Rethrow sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="417.6,824.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SequenceForTaxCaddy.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="416,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Functionality\SequenceForTaxCaddy.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_str_FirstName">[str_FirstName]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_str_LastName">[str_LastName]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_str_TaxYear">[str_TaxYear]</InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_int_CountofEfileAuthorization">[int_countofefileauthorization]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_str_TaxSofware">[str_TaxSoftware]</InArgument>
            <InOutArgument x:TypeArguments="x:String" x:Key="io_str_Functionality">[str_Functionality]</InOutArgument>
            <InArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_TestSummaryReport">[io_dt_TestSummaryReport]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s1:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <ActivityAction x:TypeArguments="s1:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,404" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WriteCell WorkbookPathResource="{x:Null}" Cell="B19" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="382.4,148" sap2010:WorkflowViewState.IdRef="WriteCell_16" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" Text="Failed" WorkbookPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" />
              <ui:WriteCell WorkbookPathResource="{x:Null}" Cell="E19" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="382.4,148" sap2010:WorkflowViewState.IdRef="WriteCell_18" SheetName="[in_Config(&quot;SanityReport_SummaryReportsheetName&quot;).ToString]" Text="[exception.Message]" WorkbookPath="[in_Config(&quot;SanityReport_ReportPath&quot;).ToString.Split(&quot;.xlsx&quot;)(0)+&quot;_&quot;+in_TransactionItem.SpecificContent(&quot;FirstName&quot;).ToString+&quot;.xlsx&quot;]" />
              <Rethrow sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>